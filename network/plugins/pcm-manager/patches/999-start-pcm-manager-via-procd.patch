--- a/scripts/tr181-pcm.sh
+++ b/scripts/tr181-pcm.sh
@@ -1,30 +1,53 @@
-#!/bin/sh
+#!/bin/sh /etc/rc.common
+
 [ -f /etc/environment ] && source /etc/environment
-ulimit -c ${ULIMIT_CONFIGURATION:-0}
-name="pcm-manager"
 
-case $1 in
-    start|boot)
-        pcm-manager -D
-        ;;
-    stop|shutdown)
-        if [ -f /var/run/${name}.pid ]; then
-            kill `cat /var/run/${name}.pid`
+START=99
+STOP=10
+USE_PROCD=1
+
+SERVICE=pcm-manager
+
+start_service() {
+        if [ "$(uci get prplmesh.config.enable 2>/dev/null)" = "1" ]; then
+                logger "Starting pcm-manager as Prplmesh is enabled"
+                procd_open_instance
+                procd_set_param command pcm-manager -D
+                procd_set_param limits core=${ULIMIT_CONFIGURATION:-0}
+                procd_set_param stdout 1
+                procd_set_param stderr 1
+                procd_close_instance
         else
-            killall ${name}
+                logger "Not starting pcm-manager as Prplmesh is disabled"
+        fi
+}
+
+stop_service() {
+        logger "Stopping pcm-manager"
+        # The pcm-manager is started by the Ambiorix libraries
+        # and is not daemonized by procd, so it must be stopped explicitly.
+
+        if [ -f "/var/run/${SERVICE}.pid" ]; then
+            pid=$(cat "/var/run/${SERVICE}.pid")
+        elif [ -f "/var/run/${SERVICE}/${SERVICE}.pid" ]; then
+            pid=$(cat "/var/run/${SERVICE}/${SERVICE}.pid")
         fi
-        ;;
-    debuginfo)
-        ubus-cli "PersistentConfiguration.?"
-        ;;
-    restart)
-        $0 stop
-        $0 start
-        ;;
-    log)
-        echo "TODO log pcm-manager"
-        ;;
-    *)
-        echo "Usage : $0 [start|boot|stop|debuginfo|log]"
-        ;;
-esac
+
+        if [ -z "$pid" ]; then
+            logger "Process $SERVICE - $pid not found. Nothing to stop..."
+            return
+        fi
+
+        # pcm-manager could not be killed using SIGTERM hence using SIGKILL
+        kill -9 "$pid"
+
+}
+
+reload_service() {
+        stop
+        start
+}
+
+service_triggers() {
+       procd_add_reload_trigger "prplmesh"
+}
