#!/bin/sh /etc/rc.common

. /lib/functions/system.sh

START=99

#####################################
# Helper functions for wlan ready
#####################################

hostapd_ready()
{
        hostapd_cli -i$1 stat &>/dev/null
}

wlan_reset()
{
        wifi down
        sleep 2
        wifi
}

wlan_ready()
{
        for iface; do
                if ! hostapd_ready "$iface"; then
                        echo "$0: wlan $iface not ready" > /dev/console
                        return 1
                fi
        done
}

get_hostap_iface() {
        local radio="$1"
        uci get "prplmesh.$radio.hostap_iface"
}

wlan_ready_poll()
{
        local delay=${1-3}
        # load the prplmesh config to be able to get the radio iface:
        config_load prplmesh
        ifaces="$(config_foreach get_hostap_iface wifi-device)"
        while true ; do
                if wlan_ready $ifaces; then
                        break
                fi
                sleep $delay
        done
}

####################
# main
####################

status_function() {
        echo "enable: $(uci get prplmesh.config.enable)"
        echo "management_mode: $(uci get prplmesh.config.management_mode)"
        echo "operating_mode: $(uci get prplmesh.config.operating_mode)"
        wlan_ready && echo "WLAN Ready" > /dev/console || echo "WLAN not ready"
        /opt/prplmesh/scripts/prplmesh_utils.sh status
}

start_function() {
        if uci get prplmesh.config.enable > /dev/null; then
                wlan_ready_poll
                # There is a bug in acceleration which sometimes causing bridged WAN not to work
                # and failing EasyMesh wireless bAPs tests (4.2.3).
                # Disable acceleration when starting prplmesh. Can be re-enabled after upgrade to
                # latest prplWrt - see https://github.com/prplfoundation/prplMesh/issues/889
                ppacmd exit
                if [ "$(uci get prplmesh.config.operating_mode)" = "Gateway" ]; then
                        echo "start prplmesh controller & agent" > /dev/console
                        /opt/prplmesh/scripts/prplmesh_utils.sh start
                else
                        echo "start prplmesh agent" > /dev/console
                        /opt/prplmesh/scripts/prplmesh_utils.sh start -m A
                fi
        else
                echo "prplmesh Disabled (prplmesh.config.enable=0), skipping..." > /dev/console
                exit 0
        fi
}

stop_function() {
        echo "Stop prplmesh" > /dev/console
        /opt/prplmesh/scripts/prplmesh_utils.sh stop
        # since prplmesh changes the wifi runtime configuration,
        # restart wifi when stopping prplmesh
        wlan_reset
}

enable_function() {
        echo "Enable prplmesh (reboot required)" > /dev/console
        uci set prplmesh.config.enable=1
        uci commit prplmesh
}

disable_function() {
        echo "Disable prplmesh (reboot required)" > /dev/console
        uci set prplmesh.config.enable=0
        uci commit prplmesh
}

start() {
        start_function
}

stop() {
        stop_function
}

restart() {
        stop_function
        start_function
}

status() {
        status_function
}

__uci_set_repeater_mode__() {
        uci set network.lan.ifname='eth1 eth0_1 eth0_2 eth0_3 eth0_4'
        uci commit network
        uci set prplmesh.config.management_mode='Multi-AP-Agent'
        uci set prplmesh.config.operating_mode='WDS-Repeater'
        uci set prplmesh.config.wired_backhaul=1
        uci set prplmesh.config.master=0
        uci set prplmesh.config.gateway=0
        uci commit prplmesh
}

repeater_mode() {
        stop
        __uci_set_repeater_mode__
        /etc/init.d/network reload
        start
        echo "prplmesh repeater mode set"
}

__uci_set_gateway_mode__() {
        uci set network.lan.ifname='eth0_1 eth0_2 eth0_3 eth0_4'
        uci commit network
        uci set prplmesh.config.management_mode='Multi-AP-Controller-and-Agent'
        uci set prplmesh.config.operating_mode='Gateway'
        uci set prplmesh.config.wired_backhaul=0
        uci set prplmesh.config.master=1
        uci set prplmesh.config.gateway=1
        uci commit prplmesh
}

gateway_mode() {
        stop
        __uci_set_gateway_mode__
        /etc/init.d/network reload
        start
        echo "prplmesh gateway mode set"
}

__uci_set_certification_mode__() {
        # Add br-lan alias for UCC control network IP address
        uci set network.cert='interface'
        uci set network.cert.proto='static'
        uci set network.cert.ifname='@lan'
        uci set network.cert.ipaddr='192.168.250.170'
        uci set network.cert.netmask='255.255.255.0'
        # In certification, we use eth1 as the data interface for both agent and repeater
        uci set network.lan.ifname='eth1 eth0_1 eth0_2 eth0_3 eth0_4'
        uci commit network
}

certification_mode() {
        mode=${1-controller}

        stop
        case "$mode" in
        controller | gateway)
                __uci_set_gateway_mode__
                __uci_set_certification_mode__
                ;;
        agent | repeater)
                __uci_set_repeater_mode__
                __uci_set_certification_mode__
                ;;
        esac
        /etc/init.d/network reload
        start
}

EXTRA_COMMANDS="status repeater_mode gateway_mode certification_mode"
EXTRA_HELP='''
	status                    show service status
        certification_mode <mode> set certification controller mode
	repeater_mode             set repeater mode
	gateway_mode              set gateway mode
'''

