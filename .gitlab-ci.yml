variables:
  CI_DESIGNATED_BRANCH: prplos-next
  CI_SDK_PIPELINE_SOURCE: parent_pipeline

include:
  - remote: https://gitlab.com/prpl-foundation/prplOS/prplos/-/raw/prplos/.gitlab/sdk.yml

.expensive_job_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DESIGNATED_BRANCH

generate full:
  rules:
    - !reference [.expensive_job_rules, rules]
  extends: .generate

generate:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != $CI_DESIGNATED_BRANCH
      when: manual
  extends: .generate
  variables:
    CI_SDK_TARGETS: |
      x86-64-22.03.2

.generate:
  extends: .generate SDK package build jobs
  variables:
    CI_SDK_TARGETS: |
      x86-64-22.03.2
    CI_SDK_BUILD_PACKAGES: |
      acl-manager
      amx-fcgi
      amxb-inspect
      amx-cli
      amxo-cg
      amxrt
      cthulhu
      cthulhu-lxc
      debug-information
      deviceinfo-manager
      dhcpv4-manager
      dhcpv6s-manager
      ethernet-manager
      fcgi
      gmap-client
      gmap-mibs-common
      gmap-mod-ethernet-dev
      gmap-mod-name-selector
      gmap-mod-self
      gmap-server
      hosts-manager
      ip-manager
      libamxa
      libamxb
      libamxc
      libamxd
      libamxj
      libamxm
      libamxo
      libamxp
      libamxs
      libamxt
      libarchive
      libcthulhu
      libdhcpoptions
      libfiletransfer
      libfwinterface
      libfwrules
      libgmap-client
      libimtp
      libipat
      libnetlink-utils
      libnetmodel
      libocispec
      libpacket-interception
      libpcp
      libqoscommon
      librlyeh
      libqosmod
      libqosnode
      libsahtrace
      libswla
      libswlc
      libtr69-engine
      libwebsockets4
      lua-amx
      moca-manager
      mod-amxb-ubus
      mod-ba-cli
      mod-dm-cli
      mod-dmext
      mod-dmproxy
      mod-dmstats
      mod-fw-amx
      mod-httpaccess-lighttpd
      mod-lua-amx
      mod-netmodel
      mod-pcm-svc
      mod-qos-tc
      mod-sahtrace
      mod-sahtrace
      mod-vlan-ioctl
      mod-vlan-uci
      mod-whm-dummy
      mod-xpon-prpl
      multisettings
      netdev-plugin
      netmodel
      netmodel-bridge
      netmodel-clients
      netmodel-dhcpv4
      netmodel-dhcpv6
      netmodel-dslite
      netmodel-ethernet
      netmodel-ip
      netmodel-iprouter
      netmodel-logical
      netmodel-netdev
      netmodel-ppp
      netmodel-radio
      netmodel-vlan
      odl-generator
      packet-interception
      pcm-manager
      pwhm
      rlyeh
      routing-manager
      ssh-server
      station-sniffer
      time-manager
      timingila
      timingila-cthulhu
      timingila-rlyeh
      tr069-manager
      tr181-bridging
      tr181-device
      tr181-dhcpv4client
      tr181-dhcpv6client
      tr181-dns
      tr181-dnssd
      tr181-dslite
      tr181-dynamicdns
      tr181-firewall
      tr181-httpaccess
      tr181-logical
      tr181-neighbordiscovery
      tr181-pcp
      tr181-ppp
      tr181-qos
      tr181-routeradvertisement
      tr181-upnp
      tr181-usermanagement
      tr181-xpon
      uriparser
      wan-autosensing
      wan-manager

.generate SDK package build jobs:
  stage: generate
  image: alpine

  variables:
    CI_SDK_BUILD_PACKAGES: |
      please-provide
    CI_SDK_PACKAGE_JOBS_TEMPLATE: |
      {% if env['CI_SDK_PIPELINE_SOURCE'] %}
      workflow:
        rules:
          - if: $$CI_PIPELINE_SOURCE == "{{ env['CI_SDK_PIPELINE_SOURCE'] }}"
      {% endif %}
      include:
        - remote: https://gitlab.com/prpl-foundation/prplos/prplos/-/raw/prplos/.gitlab/sdk.yml
      {% for sdk in env['CI_SDK_TARGETS'].rstrip().split("\n") %}
        {% for package in env['CI_SDK_BUILD_PACKAGES'].rstrip().split("\n") %}
          {% if not ("whm" in package and "22.03" in sdk) %}
      build {{ package | trim }} with {{ sdk | trim }} SDK:
        extends: .build feed with {{ sdk | trim }} SDK
        variables:
          CI_SDK_BUILD_PACKAGES: {{ package | trim }}
          CI_SDK_BUILD_CONFIG_EXTRA: +PACKAGE_{{ package | trim }}
          {% endif %}
        {% endfor %}
      {% endfor %}

  before_script:
    - apk add python3 py3-pip
    - pip3 install jinja2

  script:
    - |
      echo "$CI_SDK_PACKAGE_JOBS_TEMPLATE" | python3 -c '
      import os
      import sys
      import jinja2
      sys.stdout.write(
        jinja2.Template(sys.stdin.read()
      ).render(env=os.environ))' > sdk-package-jobs.yml
    - cat sdk-package-jobs.yml

  artifacts:
    paths:
      - sdk-package-jobs.yml

build:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != $CI_DESIGNATED_BRANCH
  extends: .execute SDK package build jobs

build full:
  rules:
    - !reference [.expensive_job_rules, rules]
  stage: build
  needs:
    - generate full

  trigger:
    include:
      - artifact: sdk-package-jobs.yml
        job: generate full
    strategy: depend

.build prplmesh with SDK:
  rules:
    - !reference [.expensive_job_rules, rules]
  tags:
    - firmware-builder
  extends: .build feed with SDK
  variables:
    CI_SDK_BUILD_PACKAGES: prplmesh
    CI_SDK_INSTALL_FEEDS: base packages
    CI_SDK_BUILD_CONFIG: >
      +BUILD_LOG -AUTOREMOVE -ALL -ALL_NONSHARED -ALL_KMODS -SIGNED_PACKAGES +PACKAGE_wpad-basic +PACKAGE_kmod-mac80211-hwsim +USE_PRPLMESH_WHM +PACKAGE_prplmesh +PACKAGE_prplmesh-unit-tests

build prplmesh with intel_mips-xrx500 SDK:
  extends: .build prplmesh with SDK
  variables:
    CI_SDK_IMAGE: prpl.registry.true.cz/prpl-foundation/prplos/prplos/$CI_DESIGNATED_BRANCH/sdk-intel_mips-xrx500:latest
    CI_SDK_INSTALL_FEEDS: base packages luci routing feed_intel

build prplmesh with ipq40xx-generic SDK:
  extends: .build prplmesh with SDK
  variables:
    CI_SDK_IMAGE: prpl.registry.true.cz/prpl-foundation/prplos/prplos/$CI_DESIGNATED_BRANCH/sdk-ipq40xx-generic:latest

build prplmesh with mvebu-cortexa9 SDK:
  extends: .build prplmesh with SDK
  variables:
    CI_SDK_IMAGE: prpl.registry.true.cz/prpl-foundation/prplos/prplos/$CI_DESIGNATED_BRANCH/sdk-mvebu-cortexa9:latest

build prplmesh with x86-64 OpenWrt 22.03.2 SDK:
  rules:
    - !reference [generate, rules]
    - !reference [.expensive_job_rules, rules]
  extends: .build feed with x86-64-22.03.2 SDK
  tags:
    - firmware-builder
  variables:
    CI_SDK_BUILD_PACKAGES: prplmesh
    CI_SDK_INSTALL_FEEDS: base packages
    CI_SDK_BUILD_CONFIG: >
      +BUILD_LOG -AUTOREMOVE -ALL -ALL_NONSHARED -ALL_KMODS -SIGNED_PACKAGES +PACKAGE_wpad-basic +PACKAGE_kmod-mac80211-hwsim +USE_PRPLMESH_WHM +PACKAGE_prplmesh +PACKAGE_prplmesh-unit-tests

