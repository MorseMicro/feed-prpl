From 436d366704832cc0c288ba6236454d802a4d88cd Mon Sep 17 00:00:00 2001
From: sahbot <support.opensource@softathome.com>
Date: Fri, 12 May 2023 12:14:32 +0200
Subject: [PATCH] Issue: HOP-3487 Use index paths when sending events after an
 odl file is parsed [fix]

GitOrigin-RevId: b2265b1e6794ac7c0ed3077a497c8f6905134427
---
 src/amxo_parser_dm_utils.c                 |  2 +-
 test/amxo_event_subscription/test_events.c | 20 +++++++++++++++++++-
 2 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/src/amxo_parser_dm_utils.c b/src/amxo_parser_dm_utils.c
index 7eb3724..194b6fe 100644
--- a/src/amxo_parser_dm_utils.c
+++ b/src/amxo_parser_dm_utils.c
@@ -119,7 +119,7 @@ static void amxo_parser_push_event(amxo_parser_t* pctx,
                                    event_id_t event) {
     event_t* e = (event_t*) calloc(1, sizeof(event_t));
     e->id = event;
-    e->path = amxd_object_get_path(pctx->object, AMXD_OBJECT_TERMINATE);
+    e->path = amxd_object_get_path(pctx->object, AMXD_OBJECT_TERMINATE | AMXD_OBJECT_INDEXED);
     amxc_var_init(&e->data);
 
     amxc_llist_append(&pctx->event_list, &e->it);
diff --git a/test/amxo_event_subscription/test_events.c b/test/amxo_event_subscription/test_events.c
index a5af46b..24178b4 100644
--- a/test/amxo_event_subscription/test_events.c
+++ b/test/amxo_event_subscription/test_events.c
@@ -332,6 +332,7 @@ void test_populate_section_generates_events(UNUSED void** state) {
         "    object Test {"
         "        object MiTest[] {"
         "            string Text;"
+        "            %unique %key string Alias;"
         "        }"
         "    }"
         "}"
@@ -349,6 +350,15 @@ void test_populate_section_generates_events(UNUSED void** state) {
         "    on event \"dm:object-changed\" call object_changed;"
         "}";
 
+    const char* odl_dot =
+        "%populate {"
+        "    object Test.MiTest {"
+        "        instance add (0,\"welcome.again\") {"
+        "            parameter Text = \"I like dots in Aliases\";"
+        "        }"
+        "    }"
+        "}";
+
     amxd_dm_init(&dm);
     amxo_parser_init(&parser);
 
@@ -366,6 +376,14 @@ void test_populate_section_generates_events(UNUSED void** state) {
     assert_int_equal(instance_add_counter, 1);
     assert_int_equal(object_changed_counter, 1);
 
+    assert_int_equal(amxo_parser_parse_string(&parser, odl_dot, amxd_dm_get_root(&dm)), 0);
+    assert_int_equal(amxo_parser_get_status(&parser), amxd_status_ok);
+
+    while(amxp_signal_read() == 0) {
+    }
+    assert_int_equal(event_counter, 5);
+    assert_int_equal(instance_add_counter, 2);
+
     amxo_parser_clean(&parser);
     amxd_dm_clean(&dm);
 }
@@ -419,4 +437,4 @@ void test_events_are_in_correct_order(UNUSED void** state) {
     amxc_var_clean(&events);
     amxo_parser_clean(&parser);
     amxd_dm_clean(&dm);
-}
\ No newline at end of file
+}
-- 
GitLab

